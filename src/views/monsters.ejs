<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="../css/general.css">
    <link rel="stylesheet" type="text/css" href="../css/forms.css">
    <link rel="stylesheet" type="text/css" href="../css/main.css">
    <link rel="stylesheet" type="text/css" href="../css/menu.css">
    <link rel="stylesheet" type="text/css" href="../css/table.css">

    <title>Document</title>

    <style>
        .containerAtacks {
            display: flex;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="menuBar">
            <a class="menuItem" href='#'>Testar Jogo</a>
            <a class="menuItem ml-5" href='./atacks'>Ataques</a>
            <a class="menuItem ml-5" href='./monsters'>Monstros</a>
            <a class="menuItem ml-5" href='./players'>Players</a>
            <a class="menuItem ml-5" href='/'>Sair</a>
        </div>
        <div class="main">
            <div class="containerTable" id="tbMonster" style="display: inline;">
                <button onclick="window.location.href='./monsters/formNew'">Novo monstro</button>
                <div class="divTable">
                    <table>
                        <tr>
                            <th class="tbHead"> Ações </th>
                            <th class="tbHead"> Nome do monstro </th>
                            <th class="tbHead"> Tipo </th>
                            <th class="tbHead"> Ataque </th>
                            <th class="tbHead"> Defesa </th>
                        </tr>
                        <% 
                            function getNameType(code) {
                                switch (code) {
                                    case 0: return 'normal'; break;
                                    case 1: return 'água'; break;
                                    case 2: return 'fogo'; break;
                                    case 3: return 'elétrico'; break;
                                    case 4: return 'gelo'; break;
                                }
                            }                    
                         %>
                        <% for (let i = 0; i < monsters.length; i++) { %>
                        <tr>
                            <th class="tbBody">
                                <button onclick="window.location.href='monsters/<%=monsters[i]._id%>'">Editar</button>
                                <button
                                    onclick="window.location.href='monsters/delete/<%=monsters[i]._id%>'">Excluir</button>
                                <button onclick="showAtacks('<%=monsters[i]._id%>')">Ataques</button>
                            </th>
                            <th class="tbBody"> <%=monsters[i].name %> </th>
                            <th class="tbBody"> <%=getNameType(monsters[i].type) %> </th>
                            <th class="tbBody"> <%=monsters[i].atack %> </th>
                            <th class="tbBody"> <%=monsters[i].defense %> </th>
                        </tr>
                        <% } %>
                    </table>
                </div>
            </div>
            <div id="tbMonsterAtack" style="display: none;">
                <button onclick="saveAtacks()">Salvar</button>
                <button onclick="cancelAtacks()">Cancelar</button>
                <div class="containerAtacks">
                    <div class="divTable">
                        <table id="tbAtacksMonster">
                            <tr>
                                <th class="tbHead">Ação</th>
                                <th class="tbHead">Level</th>
                                <th class="tbHead">nome do ataque</th>
                            </tr>
                            <tr>
                                <td><button style="width: 100%;">-</button></td>
                                <td><input type="number" value=1  min="1" max="50" style="width: 40px;"></td>
                                <td>soco</td>
                            </tr>
                        </table>
                    </div>
                    <div class="divTable ml-5">
                        <table id="tbAtack">
                            <tr>
                                <th class="tbHead">Ação</th>
                                <th class="tbHead">nome do ataque</th>
                            </tr>
                            <tr>
                                <td><button style="width: 100%;">+</button></td>
                                <td>chute</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<script>
    let ramAtacksMonster = [];
    let _id;
    const tbAtacksMonster = document.getElementById('tbAtacksMonster');

    function showAtacks(id) {
        const tbMonster = document.getElementById('tbMonster');
        const tbMonsterAtack = document.getElementById('tbMonsterAtack');
        tbMonster.style.display = 'none';
        tbMonsterAtack.style.display = 'inline';

        const tbAtack = document.getElementById('tbAtack');
        _id = id;

        // todos os ataques
        fetch('/atacks/getApi')
            .then(res => res.json().then(atacks => {
                let sAtacks = '<tr>';
                sAtacks += '<th class="tbHead">Ação</th>';
                sAtacks += '<th class="tbHead">nome do ataque</th>';
                sAtacks += '</tr >';
                atacks.forEach(atack => {
                    sAtacks += '<tr>'
                    sAtacks += `<td><button onclick="addAtack('${atack._id}', '${atack.name}')" style="width: 100%;">+</button></td>`
                    sAtacks += `<td>${atack.name}</td>`
                    sAtacks += '</tr>'
                });
                tbAtack.innerHTML = sAtacks;
            }))
            .catch(err => console.log('error: ', err));

        //ataques do monstro
        ramAtacksMonster = [];
        fetch(`/monsters/getApi/${id}`)
            .then(res => res.json().then(monster => {
                addHeadAtackHTML();
                monster.atacks.forEach(atack => {
                    addAtackHTML(atack, false);
                });
            }))
            .catch(err => console.log('error: ', err));
    }
    function addHeadAtackHTML() {
        let sAtacksMonster = '<tr>';
        sAtacksMonster += '<th class="tbHead">Ação</th>';
        sAtacksMonster += '<th class="tbHead">Level</th>';
        sAtacksMonster += '<th class="tbHead">nome do ataque</th>';
        sAtacksMonster += '</tr >';
        tbAtacksMonster.innerHTML = sAtacksMonster;
    }
    function addAtackHTML(atack, forced) {
        const found = ramAtacksMonster.findIndex(e => e.atack_id === atack.atack_id);
        if (found === -1 || forced) {
            if (!forced) ramAtacksMonster.push(atack);
            let sAtacksMonster = '<tr>';
            sAtacksMonster += `<td><button style="width: 100%;" onclick="delAtack('${atack.atack_id}')">-</button></td>`;
            sAtacksMonster += `<td><input type="number" value=${atack.level} min="1" max="50" onchange="changeLevel('${atack.atack_id}')" id=lv${atack.atack_id} style="width: 40px;"></td>`;
            sAtacksMonster += `<td>${atack.atack_name} </td>`;
            sAtacksMonster += '</tr>';
            tbAtacksMonster.innerHTML += sAtacksMonster;
        }
    }
    function changeLevel(atack_id) {
        const lv = document.getElementById(`lv${atack_id}`);
        const found = ramAtacksMonster.findIndex(e => e.atack_id === atack_id);
        ramAtacksMonster[found].level = lv.value;
        lv.setAttribute('value', lv.value);
    }
    function delAtack(atack_id) {
        addHeadAtackHTML();
        const found = ramAtacksMonster.findIndex(e => e.atack_id === atack_id);
        ramAtacksMonster.splice(found, 1);
        ramAtacksMonster.forEach(at => addAtackHTML(at, true));        
    }
    function addAtack(atack_id, atack_name) {
        const atack = { level: 1, atack_name, atack_id }
        addAtackHTML(atack);
    }
    function saveAtacks() {
        fetch(`/monsters/update/${_id}`, {
            headers: {
                'Content-Type': 'application/json'
            },
            method: 'POST',
            body: JSON.stringify({                
                atacks: ramAtacksMonster
            })
        })
        hideAtacks();
    }
    function cancelAtacks() {
        hideAtacks();
    }
    function hideAtacks() {
        const tbMonster = document.getElementById('tbMonster');
        const tbMonsterAtack = document.getElementById('tbMonsterAtack');
        tbMonster.style.display = 'block';
        tbMonsterAtack.style.display = 'none';
    }
</script>

</html>